<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yy.dao.ScenicMapper" >
  <resultMap id="BaseResultMap" type="cn.yy.pojo.Scenic" >
    <id column="scenicId" property="scenicId" jdbcType="INTEGER" />
    <result column="scenicName" property="scenicName" jdbcType="VARCHAR" />
    <result column="scenicPrice" property="scenicPrice" jdbcType="INTEGER" />
    <result column="scenicIntroduce" property="scenicIntroduce" jdbcType="VARCHAR" />
    <result column="scenicImage" property="scenicImage" jdbcType="VARCHAR" />
    <result column="scenicExist" property="scenicExist" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scenicId, scenicName, scenicPrice, scenicIntroduce, scenicImage, scenicExist
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yy.pojo.ScenicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scenic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scenic
    where scenicId = #{scenicId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scenic
    where scenicId = #{scenicId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yy.pojo.ScenicExample" >
    delete from scenic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yy.pojo.Scenic" >
    insert into scenic (scenicId, scenicName, scenicPrice, 
      scenicIntroduce, scenicImage, scenicExist
      )
    values (#{scenicId,jdbcType=INTEGER}, #{scenicName,jdbcType=VARCHAR}, #{scenicPrice,jdbcType=INTEGER}, 
      #{scenicIntroduce,jdbcType=VARCHAR}, #{scenicImage,jdbcType=VARCHAR}, #{scenicExist,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yy.pojo.Scenic" >
    insert into scenic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scenicId != null" >
        scenicId,
      </if>
      <if test="scenicName != null" >
        scenicName,
      </if>
      <if test="scenicPrice != null" >
        scenicPrice,
      </if>
      <if test="scenicIntroduce != null" >
        scenicIntroduce,
      </if>
      <if test="scenicImage != null" >
        scenicImage,
      </if>
      <if test="scenicExist != null" >
        scenicExist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scenicId != null" >
        #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="scenicName != null" >
        #{scenicName,jdbcType=VARCHAR},
      </if>
      <if test="scenicPrice != null" >
        #{scenicPrice,jdbcType=INTEGER},
      </if>
      <if test="scenicIntroduce != null" >
        #{scenicIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="scenicImage != null" >
        #{scenicImage,jdbcType=VARCHAR},
      </if>
      <if test="scenicExist != null" >
        #{scenicExist,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yy.pojo.ScenicExample" resultType="java.lang.Integer" >
    select count(*) from scenic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update scenic
    <set >
      <if test="record.scenicId != null" >
        scenicId = #{record.scenicId,jdbcType=INTEGER},
      </if>
      <if test="record.scenicName != null" >
        scenicName = #{record.scenicName,jdbcType=VARCHAR},
      </if>
      <if test="record.scenicPrice != null" >
        scenicPrice = #{record.scenicPrice,jdbcType=INTEGER},
      </if>
      <if test="record.scenicIntroduce != null" >
        scenicIntroduce = #{record.scenicIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.scenicImage != null" >
        scenicImage = #{record.scenicImage,jdbcType=VARCHAR},
      </if>
      <if test="record.scenicExist != null" >
        scenicExist = #{record.scenicExist,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scenic
    set scenicId = #{record.scenicId,jdbcType=INTEGER},
      scenicName = #{record.scenicName,jdbcType=VARCHAR},
      scenicPrice = #{record.scenicPrice,jdbcType=INTEGER},
      scenicIntroduce = #{record.scenicIntroduce,jdbcType=VARCHAR},
      scenicImage = #{record.scenicImage,jdbcType=VARCHAR},
      scenicExist = #{record.scenicExist,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yy.pojo.Scenic" >
    update scenic
    <set >
      <if test="scenicName != null" >
        scenicName = #{scenicName,jdbcType=VARCHAR},
      </if>
      <if test="scenicPrice != null" >
        scenicPrice = #{scenicPrice,jdbcType=INTEGER},
      </if>
      <if test="scenicIntroduce != null" >
        scenicIntroduce = #{scenicIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="scenicImage != null" >
        scenicImage = #{scenicImage,jdbcType=VARCHAR},
      </if>
      <if test="scenicExist != null" >
        scenicExist = #{scenicExist,jdbcType=INTEGER},
      </if>
    </set>
    where scenicId = #{scenicId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yy.pojo.Scenic" >
    update scenic
    set scenicName = #{scenicName,jdbcType=VARCHAR},
      scenicPrice = #{scenicPrice,jdbcType=INTEGER},
      scenicIntroduce = #{scenicIntroduce,jdbcType=VARCHAR},
      scenicImage = #{scenicImage,jdbcType=VARCHAR},
      scenicExist = #{scenicExist,jdbcType=INTEGER}
    where scenicId = #{scenicId,jdbcType=INTEGER}
  </update>
</mapper>