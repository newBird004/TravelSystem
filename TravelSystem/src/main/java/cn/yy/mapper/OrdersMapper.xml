<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yy.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="cn.yy.pojo.Orders" >
    <id column="orderId" property="orderId" jdbcType="INTEGER" />
    <result column="travelUserId_FK_Orders" property="travelUserId_FK_Orders" jdbcType="INTEGER" />
    <result column="orderDate" property="orderDate" jdbcType="VARCHAR" />
    <result column="orderPrice" property="orderPrice" jdbcType="INTEGER" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, travelUserId_FK_Orders, orderDate, orderPrice, orderStatus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yy.pojo.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yy.pojo.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yy.pojo.Orders" >
    insert into orders (orderId, travelUserId_FK_Orders, 
      orderDate, orderPrice, orderStatus
      )
    values (#{orderId,jdbcType=INTEGER}, #{travelUserId_FK_Orders,jdbcType=INTEGER}, 
      #{orderDate,jdbcType=VARCHAR}, #{orderPrice,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yy.pojo.Orders"   useGeneratedKeys="true" keyProperty="orderId">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="travelUserId_FK_Orders != null" >
        travelUserId_FK_Orders,
      </if>
      <if test="orderDate != null" >
        orderDate,
      </if>
      <if test="orderPrice != null" >
        orderPrice,
      </if>
      <if test="orderStatus != null" >
        orderStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="travelUserId_FK_Orders != null" >
        #{travelUserId_FK_Orders,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yy.pojo.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.orderId != null" >
        orderId = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.travelUserId_FK_Orders != null" >
        travelUserId_FK_Orders = #{record.travelUserId_FK_Orders,jdbcType=INTEGER},
      </if>
      <if test="record.orderDate != null" >
        orderDate = #{record.orderDate,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPrice != null" >
        orderPrice = #{record.orderPrice,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null" >
        orderStatus = #{record.orderStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set orderId = #{record.orderId,jdbcType=INTEGER},
      travelUserId_FK_Orders = #{record.travelUserId_FK_Orders,jdbcType=INTEGER},
      orderDate = #{record.orderDate,jdbcType=VARCHAR},
      orderPrice = #{record.orderPrice,jdbcType=INTEGER},
      orderStatus = #{record.orderStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yy.pojo.Orders" >
    update orders
    <set >
      <if test="travelUserId_FK_Orders != null" >
        travelUserId_FK_Orders = #{travelUserId_FK_Orders,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null" >
        orderDate = #{orderDate,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        orderPrice = #{orderPrice,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        orderStatus = #{orderStatus,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yy.pojo.Orders" >
    update orders
    set travelUserId_FK_Orders = #{travelUserId_FK_Orders,jdbcType=INTEGER},
      orderDate = #{orderDate,jdbcType=VARCHAR},
      orderPrice = #{orderPrice,jdbcType=INTEGER},
      orderStatus = #{orderStatus,jdbcType=INTEGER}
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>